name: SolidJS Frontend Deployment

on:
  push:
    branches: [main, dev]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Determine Deploy Environment
      run: |
        echo "Determining deployment environment..."
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "Workflow triggered manually with environment: ${{ github.event.inputs.environment }}"
          if [[ "${{ github.event.inputs.environment }}" == "production" ]]; then
            echo "ENV_FILE=.env" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.environment }}" == "development" ]]; then
            echo "ENV_FILE=.env.dev" >> $GITHUB_ENV
          else
            echo "Invalid environment input: ${{ github.event.inputs.environment }}"
            exit 1
          fi
        else
          echo "Workflow triggered by push event."
          echo "GITHUB_REF: $GITHUB_REF"
          BRANCH="${GITHUB_REF##*/}"
          if [[ "$BRANCH" == "main" ]]; then
            echo "ENV_FILE=.env" >> $GITHUB_ENV
          elif [[ "$BRANCH" == "dev" ]]; then
            echo "ENV_FILE=.env.dev" >> $GITHUB_ENV
          else
            echo "Unsupported branch for deployment: $BRANCH"
            exit 1
          fi
        fi
    
    - name: Copy environment file from APP_DIR
      run: |
        echo "Copying environment file..."
        if [[ -z "${{ secrets.APP_DIR }}" ]]; then
          echo "APP_DIR secret is not set. Please set it in the repository secrets."
          exit 1
        fi
        if [[ -f "${{ secrets.APP_DIR }}/$ENV_FILE" ]]; then
          cp "${{ secrets.APP_DIR }}/$ENV_FILE" .env
        else
          echo "Environment file $ENV_FILE not found in ${{ secrets.APP_DIR }}"
          exit 1
        fi

    - name: Deploy with Docker Compose
      run: |
        echo "Deploying SolidJS frontend with Docker Compose..."
        echo "Current User: $(whoami)"
        echo "Current Directory: $(pwd)"
        echo "Checking Docker permissions..."
        if ! docker info > /dev/null 2>&1; then
          echo "Docker is not running or you do not have permission to access it."
          exit 1
        fi
        echo "Stopping and removing existing containers..."
        docker compose down
        echo "Building and starting containers..."
        docker compose build
        if [[ $? -ne 0 ]]; then
          echo "Docker Compose build failed."
          exit 1
        fi
        echo "Starting containers in detached mode..."
        docker compose up -d
        if [[ $? -ne 0 ]]; then
          echo "Docker Compose up failed."
          exit 1
        fi
        echo "Deployment completed successfully."
